package pizzacompany;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class PizzaCompany extends javax.swing.JFrame {
    
    private String clientID;
    private DatabaseClient dbc;
    private DefaultTableModel pizzaID;
    private String deliveryAddress;
    private DefaultTableModel temp;
    
    public PizzaCompany() {
        temp = new DefaultTableModel();
        initComponents();
        this.setLocationRelativeTo(null);
        pizzaID = new DefaultTableModel();        
        dbc = new DatabaseClient();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmPanel = new javax.swing.JPanel();
        LConfirm = new javax.swing.JLabel();
        buttonConfirm = new javax.swing.JButton();
        backCButton = new javax.swing.JButton();
        LAddress = new javax.swing.JLabel();
        delAddrL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pizzaPanel = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        tablePane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        checkDel = new javax.swing.JCheckBox();
        transportL = new javax.swing.JLabel();
        transportBox = new javax.swing.JComboBox<>();
        fieldConfAddr = new javax.swing.JTextField();
        confirmAddressL = new javax.swing.JLabel();
        buttonPI = new javax.swing.JButton();
        lorderButton = new javax.swing.JToggleButton();
        registerPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fieldPhone = new javax.swing.JTextField();
        labelFname = new javax.swing.JLabel();
        fieldFname = new javax.swing.JTextField();
        fieldLname = new javax.swing.JTextField();
        labelLname = new javax.swing.JLabel();
        fieldAddress = new javax.swing.JTextField();
        labelAddress = new javax.swing.JLabel();
        fieldEmail = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        registerButton2 = new javax.swing.JButton();
        regBack = new javax.swing.JButton();
        pinfoPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fieldfname = new javax.swing.JTextField();
        fieldlname = new javax.swing.JTextField();
        fieldemail = new javax.swing.JTextField();
        fieldaddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        buttonUpdate = new javax.swing.JButton();
        fieldphone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        welcomePanel = new javax.swing.JPanel();
        quitLabel1 = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        phoneLogin = new javax.swing.JTextField();
        phoneLoginLabel = new javax.swing.JLabel();

        confirmPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        confirmPanel.setPreferredSize(new java.awt.Dimension(375, 350));

        LConfirm.setText("<html><h1>Please, confirm your order</h1></html>");

        buttonConfirm.setText("Confirm");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        backCButton.setText("Cancel");
        backCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backCButtonActionPerformed(evt);
            }
        });

        LAddress.setText("none");

        delAddrL.setText("Delivery address:");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout confirmPanelLayout = new javax.swing.GroupLayout(confirmPanel);
        confirmPanel.setLayout(confirmPanelLayout);
        confirmPanelLayout.setHorizontalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confirmPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(LConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(confirmPanelLayout.createSequentialGroup()
                        .addComponent(delAddrL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LAddress)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(backCButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonConfirm)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        confirmPanelLayout.setVerticalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(confirmPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delAddrL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backCButton)
                    .addComponent(buttonConfirm))
                .addContainerGap())
        );

        pizzaPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pizzaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pizzaPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        pizzaPanel.setName(""); // NOI18N

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        tablePane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePane.setViewportView(table);

        jLabel1.setText("<html><h1>Choose pizza quantity</h1></html>");

        checkDel.setText("Delivery");
        checkDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDelActionPerformed(evt);
            }
        });

        transportL.setText("Transport:");

        transportBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transportBoxActionPerformed(evt);
            }
        });

        confirmAddressL.setText("Address:");

        buttonPI.setText("Change personal info");
        buttonPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPIActionPerformed(evt);
            }
        });

        lorderButton.setText("Last order");
        lorderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lorderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pizzaPanelLayout = new javax.swing.GroupLayout(pizzaPanel);
        pizzaPanel.setLayout(pizzaPanelLayout);
        pizzaPanelLayout.setHorizontalGroup(
            pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizzaPanelLayout.createSequentialGroup()
                .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(tablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(confirmAddressL)
                        .addGap(17, 17, 17)
                        .addComponent(fieldConfAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkDel)
                        .addGap(209, 209, 209)
                        .addComponent(lorderButton))
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(transportL)
                        .addGap(17, 17, 17)
                        .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pizzaPanelLayout.createSequentialGroup()
                                .addComponent(buttonPI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(submitButton))
                            .addComponent(transportBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pizzaPanelLayout.setVerticalGroup(
            pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizzaPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(tablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkDel)
                    .addComponent(lorderButton))
                .addGap(8, 8, 8)
                .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmAddressL)
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(fieldConfAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizzaPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(transportL))
                    .addComponent(transportBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pizzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(buttonPI))
                .addContainerGap())
        );

        registerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Phone(required):");

        fieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPhoneActionPerformed(evt);
            }
        });

        labelFname.setText("First name:");

        fieldFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldFnameActionPerformed(evt);
            }
        });

        fieldLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldLnameActionPerformed(evt);
            }
        });

        labelLname.setText("Last name:");

        fieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAddressActionPerformed(evt);
            }
        });

        labelAddress.setText("Address:");

        labelEmail.setText("Email:");

        registerButton2.setText("Register");
        registerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButton2ActionPerformed(evt);
            }
        });

        regBack.setText("Back");
        regBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(labelEmail))
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(labelFname)
                                        .addComponent(jLabel3)
                                        .addComponent(labelLname))
                                    .addComponent(labelAddress, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(fieldFname)
                            .addComponent(fieldLname)
                            .addComponent(fieldAddress)
                            .addComponent(fieldEmail, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(regBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registerButton2)))
                .addGap(0, 13, Short.MAX_VALUE))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFname)
                    .addComponent(fieldFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLname)
                    .addComponent(fieldLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddress)
                    .addComponent(fieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmail))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton2)
                    .addComponent(regBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("<html><h1>Personal info</h1></html>");

        jLabel5.setText("First name:");

        jLabel6.setText("Last name:");

        jLabel7.setText("Email:");

        jLabel8.setText("Address:");

        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        jLabel4.setText("Phone(required):");

        javax.swing.GroupLayout pinfoPanelLayout = new javax.swing.GroupLayout(pinfoPanel);
        pinfoPanel.setLayout(pinfoPanelLayout);
        pinfoPanelLayout.setHorizontalGroup(
            pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pinfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldphone, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pinfoPanelLayout.createSequentialGroup()
                        .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fieldlname, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                .addComponent(fieldfname)
                                .addComponent(fieldemail))
                            .addComponent(fieldaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pinfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinfoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonUpdate)
                .addGap(77, 77, 77))
        );
        pinfoPanelLayout.setVerticalGroup(
            pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(pinfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fieldaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(buttonUpdate)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pizza");
        setBackground(new java.awt.Color(153, 153, 153));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 300));
        getContentPane().setLayout(new java.awt.CardLayout());

        welcomePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        quitLabel1.setText("<html><h4> Welcome to pizza company! </h4></html>");

        registerButton.setText("Register");
        registerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        phoneLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneLoginActionPerformed(evt);
            }
        });

        phoneLoginLabel.setText("Phone:");

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(phoneLoginLabel)
                        .addGap(16, 16, 16)
                        .addComponent(phoneLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                                .addComponent(loginButton)
                                .addGap(18, 18, 18)
                                .addComponent(registerButton))
                            .addComponent(quitLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 22, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(quitLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phoneLoginLabel)
                    .addComponent(phoneLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(registerButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(welcomePanel, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldFnameActionPerformed
    }//GEN-LAST:event_fieldFnameActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        this.setVisible(false);
        DefaultTableModel tm = new DefaultTableModel();
        deliveryAddress = fieldConfAddr.getText();
        
        if (checkDel.isSelected()) 
            LAddress.setText(deliveryAddress);        
        
        String sql = "";
        int j = checkDel.isSelected() ? 1 : 0;  
        String transport = "select DeliverymanID from deliveryman where transport='" + transportBox.getSelectedItem().toString() + "';";
        dbc.runQueryLoadTable(tm, transport);
        System.out.println(transport);
        if (j == 1) {
        sql = "INSERT INTO `order` "
                + "(`IsDelivery`, `DeliverymanID`, `ClientID`, `DeliveryAddress`, `CashierID`)"
                + " VALUES ('"  + j + "', '" + tm.getValueAt(0, 0).toString() +  
                "', '" + clientID + "', '" + fieldConfAddr.getText() + "', '4');";
        } else {
            sql = "INSERT INTO `order` "
                + "(`IsDelivery`, `ClientID`, `CashierID`)"
                + " VALUES ('"  + j + "', '" + clientID +  "', '4');";
        }
        
        try {dbc.doUpdate(sql);} catch (SQLException ex) {ex.getMessage();}
        System.out.println(sql);

        String getOID = "select max(`OrderID`) from `order` where ClientID='" + clientID + "';";    
        dbc.runQueryLoadTable(tm, getOID);
        System.out.println(getOID);
        String orderID = tm.getValueAt(0, 0).toString();
        Object o;
        String s;
        int i = 0;
        j = 0;
        tm = (DefaultTableModel)table.getModel();
        for (i = 0; i < tm.getRowCount(); i++) {
            //System.out.println(tm.getValueAt(i, 3));
            o = tm.getValueAt(i, 3);
            if (o != null && o.toString() != null && !o.toString().equals("") && !o.toString().equals("0")) {
                s = "INSERT INTO `contains` (`PizzaID`, `OrderID`, `Quantity`) VALUES ('";
                s += pizzaID.getValueAt(i, 0) + "', '" + orderID + "', '" + tm.getValueAt(i, 3) + "');";
                
                j++;
                try {dbc.doUpdate(s);} catch (SQLException ex) {ex.getMessage();}
                System.out.println(s);
            }
        }
        if (j == 0) {
            JOptionPane.showMessageDialog( this, "Please, enter pizza quantity.","Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        this.setContentPane(confirmPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        
        
        sql = "select max(`OrderID`) from `order` where `ClientID` = '" + clientID + "'";
        dbc.runQueryLoadTable(tm, sql);
        o = tm.getValueAt(0, 0);
        
        sql = "SELECT `PName` as Pizza_name, `Dough`, `Size`, `Quantity` "
                + "from (`pizza` p join `contains` c on p.PizzaID = c.PizzaID)"
                + " where `OrderID` = '"+ o.toString() + "' order by PName;";
        dbc.runQueryLoadTable(tm, sql);
        jTable1.setModel(tm);    
        this.setVisible(true);
    }//GEN-LAST:event_submitButtonActionPerformed

    private void fieldLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldLnameActionPerformed
    }//GEN-LAST:event_fieldLnameActionPerformed

    private void fieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAddressActionPerformed
    }//GEN-LAST:event_fieldAddressActionPerformed

    private void fieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPhoneActionPerformed
    }//GEN-LAST:event_fieldPhoneActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        this.setVisible(false);
        String s = phoneLogin.getText();
        
        Object o = getID(s);
        if (o == null) {
            JOptionPane.showMessageDialog(this, "No such login. Please, try again.","Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }                
        clientID = o.toString();
        getPizzaList();
        getDelList();
        this.setContentPane(pizzaPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        delAddrL.setVisible(false);
        LAddress.setVisible(false);
        
        fieldConfAddr.setEnabled(checkDel.isSelected());
        transportBox.setEnabled(checkDel.isSelected());
        transportL.setEnabled(checkDel.isSelected());
        confirmAddressL.setEnabled(checkDel.isSelected());
        this.setVisible(true);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        this.setVisible(false);
        fieldPhone.setText(phoneLogin.getText());
        this.setContentPane(registerPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void phoneLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneLoginActionPerformed
    }//GEN-LAST:event_phoneLoginActionPerformed

    private void registerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButton2ActionPerformed
        this.setVisible(false);
        try {
            Object check = getID(fieldPhone.getText());
            if (check != null) {
                JOptionPane.showMessageDialog( this, "The phone is already registered. Please, enter another phone.","Error", JOptionPane.ERROR_MESSAGE);
                this.setVisible(true);
                return;
            }
        } catch (HeadlessException ex) {}
        
        if (fieldPhone.getText().equals("")) {
            JOptionPane.showMessageDialog( this, "Please, enter your phone.","Error", JOptionPane.ERROR_MESSAGE);  
            this.setVisible(true);
        }
        else {        
                String insert = "INSERT INTO client "
                        + "(`FName`, `LName`, `Email`, `Address`, `Phone`) VALUES "
                        + "('" + fieldFname.getText() + "', '" + fieldLname.getText() + "', '" + fieldEmail.getText() + "', '" + fieldAddress.getText() + "', '" + fieldPhone.getText() + "');";
                try {dbc.doUpdate(insert);} catch (SQLException ex) {ex.getMessage();}
                System.out.println(insert);
                JOptionPane.showMessageDialog( this, "Registered successfully.","Register", JOptionPane.INFORMATION_MESSAGE); 
                
                clientID = getID(fieldPhone.getText()).toString();
                getPizzaList();
                getDelList();
                
                delAddrL.setVisible(false);
                LAddress.setVisible(false);
                transportL.setEnabled(checkDel.isSelected());
                transportBox.setEnabled(checkDel.isSelected());
                fieldConfAddr.setEnabled(checkDel.isSelected());
                confirmAddressL.setEnabled(checkDel.isSelected());
                this.setContentPane(pizzaPanel);
                this.pack();
                this.setLocationRelativeTo(null);
                this.setVisible(true);
        }
    }//GEN-LAST:event_registerButton2ActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed
//        this.setVisible(false);
        JOptionPane.showMessageDialog(this, "Thank you for the order!","Success", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void checkDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDelActionPerformed
        delAddrL.setVisible(checkDel.isSelected());
        LAddress.setVisible(checkDel.isSelected());        
        delAddrL.setVisible(checkDel.isSelected());
        transportL.setEnabled(checkDel.isSelected());
        transportBox.setEnabled(checkDel.isSelected());
        fieldConfAddr.setEnabled(checkDel.isSelected());
        confirmAddressL.setEnabled(checkDel.isSelected());
    }//GEN-LAST:event_checkDelActionPerformed

    private void backCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCButtonActionPerformed
        this.setVisible(false);
        String sql = "select max(`OrderID`) from `order` where `ClientID` = '" + clientID + "'";
        DefaultTableModel tm = new DefaultTableModel();
        dbc.runQueryLoadTable(tm, sql);
        System.out.println(sql);
        String orderID = tm.getValueAt(0, 0).toString();
        
        sql = "DELETE FROM `contains` WHERE `OrderID`='" + orderID +"';";
        
        try {dbc.doUpdate(sql);} catch (Exception ex) {}
        System.out.println(sql);
        sql = "DELETE FROM `order` WHERE `OrderID`='" + orderID +"';";
        try {dbc.doUpdate(sql);} catch (Exception ex) {}
        System.out.println(sql);
        getPizzaList();
        this.setContentPane(pizzaPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        
    }//GEN-LAST:event_backCButtonActionPerformed

    private void regBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regBackActionPerformed
        this.setVisible(false);
        this.setContentPane(welcomePanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
    }//GEN-LAST:event_regBackActionPerformed

    private void transportBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transportBoxActionPerformed
    }//GEN-LAST:event_transportBoxActionPerformed

    private void buttonPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPIActionPerformed
        this.setVisible(false);
        String sql = "select fname, lname, email, address, phone from client where ClientID = '" + clientID + "';";
        dbc.runQueryLoadTable(temp, sql);
        System.out.println(sql);
        fieldfname.setText(temp.getValueAt(0, 0).toString());
        fieldlname.setText(temp.getValueAt(0, 1).toString());
        fieldemail.setText(temp.getValueAt(0, 2).toString());
        fieldaddress.setText(temp.getValueAt(0, 3).toString());
        fieldphone.setText(temp.getValueAt(0, 4).toString());
        this.setContentPane(pinfoPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }//GEN-LAST:event_buttonPIActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        String sql = "UPDATE `client` SET FName='" + fieldfname.getText() +"',"
                + " LName='" + fieldlname.getText() +"', Email='"+ fieldemail.getText() +"', "
                + "Address='" + fieldaddress.getText() + "', Phone='" + fieldphone.getText() + "' "
                + "WHERE ClientID='"+ clientID +"';";
        
        if (fieldphone.getText().equals("")) {
            JOptionPane.showMessageDialog( this, "Please, enter phone number.","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {dbc.doUpdate(sql);} catch (SQLException ex) {
            JOptionPane.showMessageDialog( this, "This number is already registered.","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        System.out.println(sql);
        JOptionPane.showMessageDialog( this, "Updated successfully.","Update", JOptionPane.INFORMATION_MESSAGE); 
        this.setVisible(false);
        getPizzaList();
        getDelList();
        delAddrL.setVisible(false);
        LAddress.setVisible(false);
        transportL.setEnabled(checkDel.isSelected());
        transportBox.setEnabled(checkDel.isSelected());
        fieldConfAddr.setEnabled(checkDel.isSelected());
        confirmAddressL.setEnabled(checkDel.isSelected());
        this.setContentPane(pizzaPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void lorderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lorderButtonActionPerformed
        if (lorderButton.isSelected()) {
            lorderButton.setText("New order");
            String sql = "select max(`OrderID`) from `order` where `ClientID` = '" + clientID + "';";
            DefaultTableModel tm = new DefaultTableModel();
            dbc.runQueryLoadTable(tm, sql);
            System.out.println(sql);
            Object o = tm.getValueAt(0, 0);
            if (o != null) {
                sql = "SELECT `PName` as Pizza_name, `Dough`, `Size`, `Quantity` "
                        + "from (`pizza` p join `contains` c on p.PizzaID = c.PizzaID)"
                        + " where `OrderID` = '"+ o.toString() + "' order by PName;";
                dbc.runQueryLoadTable(tm, sql);
                System.out.println(sql);
                table.setModel(tm);      
            }
            else {
                JOptionPane.showMessageDialog( this, "No previous order found.","Error", JOptionPane.ERROR_MESSAGE);
                lorderButton.setText("Last order");
                lorderButton.setSelected(false);
            }
        }
        else {
            lorderButton.setText("Last order");
            getPizzaList();
        }
        
    }//GEN-LAST:event_lorderButtonActionPerformed

    public Object getID(String phone) {
        DefaultTableModel tab = new DefaultTableModel();
        String sql = "select clientid from `client` where phone='" + phone + "';";
        dbc.runQueryLoadTable(tab, sql);
        System.out.println(sql);
        Object t = null;
        try {t = tab.getValueAt(0, 0);} catch (Exception ex) {return null;}
        return t;
    }
        
    public void getPizzaList() {        
        DefaultTableModel tableModel = new DefaultTableModel();
        String pizzaListID = "select PizzaID from `pizza` order by Pname;";
        String pizzaList = "select PName as Pizza_name, Dough, size as Size from `pizza` order by Pname;";
        dbc.runQueryLoadTable(pizzaID, pizzaListID);
        dbc.runQueryLoadTable(tableModel, pizzaList);
        System.out.println(pizzaList);
        table.setFillsViewportHeight(true);
        Vector v = new Vector();        
        tableModel.addColumn("Quantity", v);
        table.setModel(tableModel);
    }
    
    public void getDelList() {
        String getDel = "SELECT * FROM deliveryman;";
        DefaultTableModel tm = new DefaultTableModel();
        dbc.runQueryLoadTable(tm, getDel);
        System.out.println(getDel);
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (int i = 0; i < tm.getRowCount(); i++) {
            model.addElement(tm.getValueAt(i, 1).toString());
        }
        transportBox.setModel(model);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PizzaCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PizzaCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PizzaCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PizzaCompany().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel LAddress;
    public javax.swing.JLabel LConfirm;
    public javax.swing.JButton backCButton;
    public javax.swing.JButton buttonConfirm;
    public javax.swing.JButton buttonPI;
    public javax.swing.JButton buttonUpdate;
    public javax.swing.JCheckBox checkDel;
    public javax.swing.JLabel confirmAddressL;
    public javax.swing.JPanel confirmPanel;
    public javax.swing.JLabel delAddrL;
    public javax.swing.JTextField fieldAddress;
    public javax.swing.JTextField fieldConfAddr;
    public javax.swing.JTextField fieldEmail;
    public javax.swing.JTextField fieldFname;
    public javax.swing.JTextField fieldLname;
    public javax.swing.JTextField fieldPhone;
    public javax.swing.JTextField fieldaddress;
    public javax.swing.JTextField fieldemail;
    public javax.swing.JTextField fieldfname;
    public javax.swing.JTextField fieldlname;
    public javax.swing.JTextField fieldphone;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    public javax.swing.JLabel labelAddress;
    public javax.swing.JLabel labelEmail;
    public javax.swing.JLabel labelFname;
    public javax.swing.JLabel labelLname;
    public javax.swing.JButton loginButton;
    public javax.swing.JToggleButton lorderButton;
    public javax.swing.JTextField phoneLogin;
    public javax.swing.JLabel phoneLoginLabel;
    public javax.swing.JPanel pinfoPanel;
    public javax.swing.JPanel pizzaPanel;
    public javax.swing.JLabel quitLabel1;
    public javax.swing.JButton regBack;
    public javax.swing.JButton registerButton;
    public javax.swing.JButton registerButton2;
    public javax.swing.JPanel registerPanel;
    public javax.swing.JButton submitButton;
    public javax.swing.JTable table;
    public javax.swing.JScrollPane tablePane;
    public javax.swing.JComboBox<String> transportBox;
    public javax.swing.JLabel transportL;
    public javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables
}